class ExtInfo{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.sandbox=e}isCloneIntoFnAvailable(){return this.sandbox.cloneInto||!1}getExtInfoJSON(){return new Promise((e,t)=>{const n=new XMLHttpRequest;n.responseType="json",n.addEventListener("load",t=>{const n=t.target.response;e(n.isActive)}),n.addEventListener("error",t),n.open("GET",webextApi.runtime.getURL("resources/extInfo.json")),n.send()})}addIsInstalledContainer(){if(document.body){const e=document.createElement("span");e.setAttribute("id","wot-installed-container"),document.body.appendChild(e)}else setTimeout(()=>{this.addIsInstalledContainer()},0)}createExtInfoSharedObject(){this.addIsInstalledContainer();try{if(!this.isCloneIntoFnAvailable())return;this.getExtInfoJSON().then(e=>{const t={isActive:e,version:VERSION,id:webextApi.runtime.id};window.wrappedJSObject.extInfo=cloneInto(t,window)}).catch(e=>{})}catch(e){}}}const extInfo=new ExtInfo(this);extInfo.createExtInfoSharedObject();